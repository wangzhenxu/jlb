<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Product">
	<resultMap type="com.timeloit.pojo.ProductClazz" id="productClazz">
		<result column="pc_id" property="pcId" />
		<result column="name" property="name" />
	</resultMap>
	<resultMap type="com.timeloit.pojo.Product" id="product">
		<result column="product_id" property="productId" />
		<result column="name" property="name" />
		<result column="customer_name" property="customerName" />
		<result column="sn_prefix" property="snPrefix" />
		<result column="upload_time" property="uploadTime" />
		<association property="productClazz"  javaType="com.timeloit.pojo.ProductClazz">
		 <result property="name" column="cname"/>
		 <result property="pcId" column="pc_id"/>
		</association>
	</resultMap>
	<resultMap type="com.timeloit.pojo.Product" id="productInfo_class_tag">
		<id column="product_id" property="productId" />
		<result column="sn_prefix" property="snPrefix" />
		<result column="pname" property="name" />
		<result column="customer_name" property="customerName" />
		<result column="pic_url" property="picUrl" />
		<result column="has_key" property="hasKey" />
		<result column="description" property="description" />
		<result column="product_type" property="productType" />
		<result column="is_public" property="isPublic" />
		<result column="show_type" property="showType" />
		<association property="productClazz"  javaType="com.timeloit.pojo.ProductClazz">
		 <result property="name" column="cname"/>
		 <result property="pcId" column="pc_id"/>
		</association>
		<collection property="tagList" ofType="com.timeloit.pojo.Tag">
			<id column="tag_id" property="tagId" />
			<result column="tag_word" property="tagWord"/>
		</collection>
	</resultMap>
	
	<resultMap type="com.timeloit.pojo.ProductCommand" id="productCommand">
		<id column="pc_id" property="pcId"/>
		<result column="ptitle" property="title"/>
		<result column="cmd_str" property="cmdStr"/>
		<association property="productCommandGroup"  javaType="com.timeloit.pojo.ProductCommandGroup">
		 <result column="gtitle" property="title" />
		</association>
	</resultMap>
	
	<resultMap type="com.timeloit.pojo.ProductCommandGroup" id="productCommandGroup">
		<id column="pcg_id" property="pcgId"/>
		 <result property="paId" column="pa_id"/>
		 <result column="gtitle" property="title" />
		 <result column="cmd_key" property="cmdKey" />
		 <association property="productAttribute"  javaType="com.timeloit.pojo.ProductAttribute" >
		 <id property="paId" column="pa_id"/>
		 <result property="attrKey" column="attr_key"/>
		 <result property="title" column="patitle"/>
		  <result property="unit" column="unit"/>
		</association>
		 <collection property="productCommandList" ofType="com.timeloit.pojo.ProductCommand">
			<id column="pc_id" property="pcId" />
			<result column="ptitle" property="title"/>
			<result column="cmd_str" property="cmdStr"/>
		</collection>
	</resultMap>
	
	
	
	
	<!-- 查询产品分类信息 -->
	<select  id="getProduct_Clazz_List" resultMap="productClazz" parameterType="hashMap">
		SELECT * FROM product_clazz
        <where>
            <if test="classname !=NULL">
        	name like '%${classname}%'
		    </if>
	   	</where>
	   	ORDER BY pc_id desc 
	   	limit #{skipResults},#{maxResults}
	</select>
	
	
	<!--查询所有产品分类信息 -->
	<select  id="getProduct_Clazz_AllList" resultMap="productClazz">
	SELECT 	pc_id, 
	NAME
	FROM 
	product_clazz
	</select>
	
	<!-- 查询产品分类总数 -->
	<select id="getProductClassListCount" parameterType="hashMap" resultType="Integer">
	 SELECT COUNT(*)
 	  FROM product_clazz 
	  <where>
	    <if test="classname !=NULL">
        name like '%${classname}%'
	   </if>
	  </where>
	</select>
	
	
	
	<!-- 增加产品分类信息 -->
	<insert id="addProduct_Clazz" parameterType="String">
	    INSERT INTO product_clazz  (NAME)  VALUES (#{name});
	</insert>
	
	<!-- 是否可以删除 -->
	<select  id="isDeleteClass" parameterType="Integer" resultType="Integer">
		SELECT COUNT(*) FROM product 
		WHERE 
		is_deleted=0
		and 
		pc_id=#{pc_id}
	</select>
	
	<!-- 是否可以添加-->
	<select  id="isAddClass" parameterType="String" resultType="Integer">
		SELECT COUNT(*) FROM product_clazz 
		WHERE 
		name=#{name}
	</select>
	
	<!--删除产品分类信息 -->
	<delete id="deleteProduct_Clazz" parameterType="Integer">
	    DELETE FROM product_clazz WHERE pc_id=#{pc_id}
	</delete>
	
	<!--修改产品分类信息 -->
	<update id="updateProduct_Clazz" parameterType="com.timeloit.pojo.ProductClazz">
	   UPDATE product_clazz SET NAME=#{name} WHERE pc_id=#{pcId}
	</update>
	
	
	<!-- 查询产品列表信息 -->
	<select id="getProductList" resultMap="product" parameterType="hashMap">
	  SELECT p.product_id,p.sn_prefix,p.name,p.customer_name,c.name cname,p.upload_time,p.pc_id,c.pc_id
 	  FROM product p,product_clazz c
	  <where>
	   p.pc_id=c.pc_id
       <if test="proname !=NULL">
        and p.name like '%${proname}%'
	   </if>
	   and is_Deleted=0
	 </where>
	 ORDER BY  p.product_id desc
	  limit #{skipResults},#{maxResults}
	</select>
	
	<!-- 查询产品总数 -->
	<select id="getProductListCount" parameterType="hashMap" resultType="Integer">
	 SELECT COUNT(*)
 	  FROM product 
	  <where>
	    is_Deleted=0
	    <if test="proname!=NULL">
        and name like '%${proname}%'
	   </if>
	  </where>
	</select>
	   
	   
	   <!-- 查询标签-->
	<select id="getTagIdByTagWord" parameterType="String" resultType="Long">
	 	SELECT tag_id FROM tag 
		WHERE tag_word=#{tagWord}
	</select>
	
	<!-- 添加产品信息 -->
	<insert id="addProduct" parameterType="com.timeloit.pojo.Product">
	INSERT INTO product
	(name,customer_name,upload_time,sn_prefix,has_key,pic_url,pc_id,description,product_type,is_public,customer_id,show_type)
	VALUES
	(
	#{name},
	#{customerName},
	#{uploadTime},
	#{snPrefix},
	#{hasKey},
	#{picUrl},
	#{pcId},
	#{description},
	#{productType},
	#{isPublic},
	#{customerId},
	#{showType}
	);
	 <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="productId">  
          SELECT LAST_INSERT_ID()   
	 </selectKey>  
	</insert>
	
	<!-- 添加产品标签信息 -->
	<insert id="addTag" parameterType="com.timeloit.pojo.Tag">
	 INSERT INTO tag (tag_word) VALUES (#{tagWord});
	 <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="tagId">  
          SELECT LAST_INSERT_ID()   
	 </selectKey> 
	</insert>
	
	<!-- 添加产品标签关联表信息 -->
	<insert id="addPro_Tag_Map" parameterType="hashMap">
	 INSERT INTO product_tag_map (product_id, tag_id) VALUES ( #{product_id},  #{tag_id} );
	</insert>
	
	<!-- 添加产品属性信息 -->
	<insert id="addPro_Attribute" parameterType="com.timeloit.pojo.ProductAttribute">
	 INSERT INTO product_attribute
	( 
	product_id, 
	attr_key, 
	title, 
	is_show, 
	is_chief, 
	unit, 
	symbol
	)
	VALUES
	( 
	#{productId}, 
	#{attrKey}, 
	#{title}, 
	#{isShow}, 
	#{isChief}, 
	#{unit}, 
	#{symbol}
	);
	</insert>
	
	<!-- 添加产品命令组信息 -->
	<insert id="addPro_Command_Group" parameterType="com.timeloit.pojo.ProductCommandGroup">
	INSERT INTO product_command_group 
	(
	product_id, 
	title, 
	cmd_key,
	pa_id
	)
	VALUES
	( 
	#{productId}, 
	#{title}, 
	#{cmdKey},
	#{paId}
	);
	<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="pcgId">  
          SELECT LAST_INSERT_ID()   
	</selectKey> 
	</insert>
	
	<!-- 添加产品命令信息 -->
	<insert id="addPro_Command" parameterType="com.timeloit.pojo.ProductCommand">
	INSERT INTO product_command 
	(
	product_id, 
	pcg_id, 
	cmd_str, 
	title
	)
	VALUES
	(
	#{productId}, 
	#{pcgId}, 
	#{cmdStr}, 
	#{title}
	);
	</insert>
    <!-- 添加产品控制面板信息 -->
	<insert id="addPro_Panel" parameterType="com.timeloit.pojo.ProductPanel">
	INSERT INTO product_panel 
	(
	product_id, 
	template_content,
	is_default
	)
	VALUES
	(
	#{productId}, 
	#{templateContent},
	#{isDefault}
	);
	</insert>
	
	
	<!-- 删除产品 -->
	<update id="deleteProduct" parameterType="Integer">
	update product set is_deleted=1 WHERE product_id =#{productId} ;
	</update>
	
	
	
	<!-- 查询产品详细信息 (产品所在类别、产品标签集合)-->
	<select id="getProduct_Info" resultMap="productInfo_class_tag" parameterType="Integer">
	    SELECT * FROM (
		SELECT pc_tag.*,tag_word FROM (
		SELECT pc.*,tag_id
		 FROM (SELECT p.product_id,sn_prefix,p.name pname, 
		p.customer_name, p.pic_url,p.has_key, p.product_type,p.is_public,
		p.pc_id,p.show_type,
		p_clazz.name cname, p.description
		FROM product p 
		LEFT JOIN
		product_clazz p_clazz
		ON p.pc_id=p_clazz.pc_id 
		 )pc
		LEFT JOIN product_tag_map tagm
		ON pc.product_id=tagm.product_id)
		 pc_tag 
		 LEFT JOIN tag
		ON pc_tag.tag_id=tag.tag_id
		) proinfo
		WHERE  product_id=#{productId}
	</select>
	
	<!-- 查询产品属性-->
	<select id="getProduct_Attribute" resultType="com.timeloit.pojo.ProductAttribute" parameterType="Integer">	   
	SELECT 	pa_id paId , 
	product_id productId, 
	attr_key attrKey, 
	title, 
	is_show isShow, 
	is_chief isChief, 
	unit, 
	symbol
	from 
	product_attribute
	where product_id=#{productId}
	</select>
	
	
	<!-- 查询产品命令-->
	<select id="getProduct_Command" resultMap="productCommand" parameterType="Integer">	   
	SELECT * FROM(
	SELECT pc_id,pc.pcg_id,pcg.product_id,pcg.title gtitle, 
	pc.title ptitle,pc.cmd_str 
	FROM 
	product_command  pc
	LEFT JOIN 
	product_command_group pcg
	ON pc.pcg_id=pcg.pcg_id
	)pcmd
	WHERE pcmd.product_id=#{productId}
	</select>
	
	
	<!-- 查询产品命令(命令组依赖)-->
	<select id="getProduct_CommandLGroup" resultMap="productCommandGroup" parameterType="Integer">	   
	SELECT * FROM(
	SELECT pc_id,
	pc.pcg_id,
	pcg.pa_id,
	pcg.product_id,
	pcg.patitle,
	pcg.attr_key,
	pcg.unit,
	pcg.title gtitle, 
	pcg.cmd_key,
	pc.title ptitle,
	pc.cmd_str 
	FROM 
	product_command  pc
	LEFT JOIN 
	(
	SELECT product_command_group.*,product_attribute.attr_key,product_attribute.title patitle,
	product_attribute.unit FROM product_command_group
	LEFT JOIN
	product_attribute
	ON product_command_group.pa_id=product_attribute.pa_id
	) pcg
	ON pc.pcg_id=pcg.pcg_id
	)pcmd
	WHERE pcmd.product_id=#{productId}
	</select>
	
	<!-- 查询产品对应模板内容-->
	<select id="getProduct_Panel" resultType="com.timeloit.pojo.ProductPanel" parameterType="Integer">	   
	SELECT 	pp_id ppId,product_id productId,template_content templateContent,is_default isDefault FROM  product_panel
	WHERE product_id=#{productId}
	</select>
	
	
	
	<!-- 查询序列号Batch操作 -->
	<select id="getProduct_Batch" resultType="com.timeloit.pojo.ProductBatch"  parameterType="HashMap">	   
	 SELECT pb_id pbId,product_id productId,name productName,num,account_username accountUsername,create_time createTime 
	 FROM 
	 (
	 SELECT product_batch.*,is_deleted,name FROM 
	 product_batch
	 LEFT JOIN product
	 ON product_batch.product_id=product.product_id
     ) a
	 <where>
       <if test="productname !=NULL">
        NAME like '%${productname}%'
	   </if>
	    <if test="createdate !=NULL">
        and DATE(create_time) ='${createdate}'
	   </if>
	</where>
	  ORDER BY pb_id desc
	  limit #{skipResults},#{maxResults}
	</select>
	
	
	<!-- 查询序列号操作总数 -->
	<select id="getProductBatchCount" parameterType="hashMap" resultType="Integer">
	 SELECT COUNT(*)
 	  FROM 
	  (
		 SELECT product_batch.*,is_deleted,name FROM 
		 product_batch
		 LEFT JOIN product
		 ON product_batch.product_id=product.product_id
      ) a
	  <where>
       <if test="productname !=NULL">
        NAME like '%${productname}%'
	   </if>
	    <if test="createdate !=NULL">
        and DATE(create_time) ='${createdate}'
	   </if>
	</where>
	</select>
	
	<!--查询产品名称 -->
	<select id="getProductName" resultType="com.timeloit.pojo.Product">	   
	SELECT 	product_id  productId, 
	name
	FROM 
	product
	where is_deleted=0
	</select>
	
	<!-- 序列号操作记录-->
	<insert id="addProductBatch" parameterType="com.timeloit.pojo.ProductBatch">
	INSERT INTO product_batch 
	(
	product_id, 
	product_name, 
	num, 
	account_username, 
	create_time
	)
	VALUES
	( 
	#{productId}, 
	#{productName}, 
	#{num}, 
	#{accountUsername}, 
	#{createTime}
	);
	<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="pbId">  
          SELECT LAST_INSERT_ID()   
	</selectKey> 
	</insert>
	
	<!-- 插入序列号-->
	<insert id="addProductSn" parameterType="com.timeloit.pojo.ProductSn">
	INSERT INTO product_sn
	(sn_value, 
	product_id, 
	key_value, 
	pb_id
	)
	VALUES
	(#{snValue}, 
	#{productId}, 
	#{keyValue}, 
	#{pbId}
	);
	</insert>
	
	
	<!--更新产品信息 -->
    <update id="updateProduct" parameterType="com.timeloit.pojo.Product">
    UPDATE product 
	SET
	<if test="name != null">name = #{name} , </if>
	<if test="hasKey != null">has_key = #{hasKey} , </if>
	<if test="picUrl != null">pic_url = #{picUrl} , </if>
	<if test="pcId != null">pc_id = #{pcId} , </if>
	<if test="description != null">description = #{description}, </if>
	<if test="isPublic != null">is_public = #{isPublic}</if>
	<if test="productType != null">, product_type = #{productType} </if>
	<if test="showType != null">, show_type = #{showType} </if>
	WHERE
	product_id = #{productId};
    </update>

	<!--更新产品属性信息 -->
    <update id="updateAttribute" parameterType="com.timeloit.pojo.ProductAttribute">
   	UPDATE product_attribute
	SET
	attr_key = #{attrKey} , 
	title = #{title} , 
	is_show = #{isShow} , 
	is_chief = #{isChief} , 
	unit = #{unit} , 
	symbol = #{symbol}
	WHERE
	pa_id = #{paId} ;
    </update>
   
    <!--更新产品命令组信息 -->
    <update id="updatePro_command_group" parameterType="com.timeloit.pojo.ProductCommandGroup">
	UPDATE product_command_group 
	SET
	title = #{title} , 
	pa_id= #{paId},
	cmd_key = #{cmdKey}
	WHERE
	pcg_id = #{pcgId} ;
    </update>
    
    <!--更新产品命令信息 -->
    <update id="updatePro_command" parameterType="com.timeloit.pojo.ProductCommand">
	UPDATE product_command 
	SET
	cmd_str = #{cmdStr} , 
	title = #{title}
	WHERE
	pc_id = #{pcId} ;
    </update>
    
    <!--更新产品命令个性编辑信息 -->
    <update id="updatePro_Panel" parameterType="com.timeloit.pojo.ProductPanel">
	UPDATE product_panel
	SET
	template_content = #{templateContent}  , 
	is_default = 0
	WHERE
	pp_id = #{ppId}  ;
    </update>
    
	
	<!-- 通过产品ID查询对应标签-->
	<select id="getTagId"  parameterType="Integer"  resultType="Long">	   
	    SELECT  tag_id FROM product_tag_map
		WHERE product_id=#{productId}
	</select>

	<!-- 查询序列号-->
	<select id="getProductSn"  parameterType="Integer"  resultType="com.timeloit.pojo.ProductSn">	   
	SELECT 	sn_value snValue, 
	key_value  keyValue
	FROM 
	product_sn
	WHERE pb_id=#{pbId}
	</select>

    <!--删除产品标签信息 -->
	<delete id="deleteTag" parameterType="Integer">
	DELETE FROM tag
	WHERE
	tag_id = #{tagId} ;
	</delete>
    
     <!--删除产品标签映射信息 -->
	<delete id="deleteTag_Map" parameterType="Integer">
	DELETE FROM product_tag_map 
	WHERE
    product_id=#{productId}
	</delete>
    
    <!--删除产品属性信息 -->
	<delete id="deleteAttribute" parameterType="Integer">
	DELETE FROM product_attribute
	WHERE
	pa_id = #{paId};
	</delete>
	
    <!--删除产品命令组信息 -->
	<delete id="deletePor_command_group" parameterType="Integer">
	DELETE FROM product_command_group 
	WHERE
	pcg_id = #{pgcId} ;
	</delete>
    
    <!--删除产品命令信息 -->
	<delete id="deletePor_command" parameterType="Integer">
	DELETE FROM product_command
	WHERE
	pc_id = #{pcId};
	</delete>
    
     <!--删除产品命令信息 -->
	<delete id="deletePor_commandByPcgId" parameterType="Integer">
	DELETE FROM product_command
	WHERE
	pcg_id = #{pcgId};
	</delete>
	
	<!--查询产品序列号 -->
	<select id="getSn_prefix"  parameterType="Long"  resultType="com.timeloit.pojo.Product">	   
	SELECT sn_prefix snPrefix,has_key hasKey FROM product
	WHERE product_id=#{product_id}
	</select>
	
	<!--更新序列号数量 -->
	<update id="updateBatchCount" parameterType="Map">
	UPDATE product_batch 
	SET
	num = #{num} 
	WHERE
	pb_id = #{pbid};
	</update>
	
	<!--删除序列号记录 -->
	<delete id="deleteBatch" parameterType="Long">
	DELETE FROM product_batch 
	WHERE
	pb_id = #{pbid} ;
	</delete>
	
    <!-- 插入报警内容-->
	<insert id="addProductActionAlert" parameterType="com.timeloit.pojo.ProductActionAlert">
	INSERT INTO product_action_alert 
	(
	product_id, 
	action_type, 
	content
	)
	VALUES
	(
	#{productId}, 
	#{actionType}, 
	#{content}
	);
	</insert>
	
	<!-- 更新报警内容-->
	<update id="updateProductActionAlert" parameterType="com.timeloit.pojo.ProductActionAlert">
	UPDATE product_action_alert
	SET
	<if test="productId != null">product_id= #{productId}, </if>
	<if test="actionType != null">action_type= #{actionType},  </if>
	<if test="content != null">content= #{content}</if>
	WHERE
	paa_id= #{paaId}
	</update>
	
	<!-- 查询报警内容-->
	<select id="selectProductActionAlert" parameterType="long" resultType="com.timeloit.pojo.ProductActionAlert">
	SELECT 	paa_id paaId, 
	product_id productId, 
	action_type actionType, 
	content
	FROM 
	product_action_alert 
	where product_id=#{productId}
	</select>
	
	<!-- 插入报警条件-->
	<insert id="addProductCondition" parameterType="com.timeloit.pojo.ProductCondition">
	INSERT INTO product_condition 
	(
	product_id, 
	pa_id, 
	operator_char, 
	value,
	meet_count
	)
	VALUES
	(
	#{productId}, 
	#{paId}, 
	#{operatorChar}, 
	#{value},
	#{meetCount}
	
	);
	</insert>
	
	
	<!-- 更新报警条件-->
	<update id="updateProductCondition" parameterType="com.timeloit.pojo.ProductCondition">
	UPDATE product_condition
	SET
	<if test="productId != null">product_id= #{productId}, </if>
	<if test="paId != null">pa_id= #{paId},  </if>
	<if test="operatorChar != null">operator_char= #{operatorChar},  </if>
	<if test="value != null">value= #{value},</if>
	<if test="meetCount != null">meet_count= #{meetCount}</if>
	WHERE
	pc_id=#{pcId} ;
	</update>
	
	<!-- 查询报警条件-->
	<select id="selectProductCondition" parameterType="long" resultType="com.timeloit.pojo.ProductCondition">
	SELECT 	pc_id pcId, 
	product_id productId, 
	pa_id  paId, 
	operator_char operatorChar, 
	value,
	meet_count meetCount
	FROM 
	product_condition 
	where product_id=#{productId}
	</select>
	
	<!-- 删除报警条件-->
	<delete id="deleteProductCondition" parameterType="long">
	DELETE FROM product_condition 
	WHERE
	pc_id=#{pcId};
	</delete>
	
	<!--查询节点是否使用序列号  -->
	<select id="NodeIsHave" resultType="int">
	SELECT 	COUNT(*)
	FROM 
	node 
	WHERE sn_value=#{snValue}
	and is_delete=0;
	</select>
	
	
	<!--查询场景是否使用序列号  -->
	<select id="sceneIsHave" resultType="int">
	SELECT 	COUNT(*)
	FROM 
	scene 
	WHERE sn_value=#{snValue}
	and is_delete=0;
	</select>
	
	
	<!--删除序列号记录-->
	<delete id="deleteProductBatch" parameterType="long">
	DELETE FROM product_batch 
	WHERE
	pb_id =#{pbId};
	</delete>
	
	
	<!--删除序列号-->
	<delete id="deleteProductSn" parameterType="long">
	DELETE FROM product_sn 
	WHERE
	pb_id =#{pbId}
	</delete>
	
	<!--删除报警内容-->
	<delete id="deleteProductActionAlert" parameterType="long">
	DELETE FROM product_action_alert 
	WHERE
	product_id =#{productId} 
	</delete>
	
	<!--查询客户列表-->
	<select id="getCustomerList" resultType="com.timeloit.pojo.Customer">
	SELECT 	`customer_id` customerId, 
	`name` customerName
	FROM 
	customer
	</select>
	
	<!-- 查询产品列表 -->
	<select id="getList" resultMap="product">
		select * from product 
		<where>
			is_deleted=0 
			<if test="productType != null">  and product_type= #{productType}</if>
			<if test="productIds !=null"> and product_id in 
				<foreach collection="productIds" item="productId"  open="(" separator="," close=")">#{productId}
        		</foreach>
			</if>
			
		</where>
	</select>
</mapper>